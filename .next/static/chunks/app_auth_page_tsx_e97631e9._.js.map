{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nitishkumar/Downloads/project/app/auth/page.tsx"],"sourcesContent":["// \"use client\"\n\n// import type React from \"react\"\n\n// import { useState } from \"react\"\n// import { Eye, EyeOff, Mail, User } from \"lucide-react\"\n// import Image from \"next/image\"\n// import Link from \"next/link\"\n\n// export default function AuthPage() {\n//   const [isLogin, setIsLogin] = useState(true)\n//   const [email, setEmail] = useState(\"\")\n//   const [password, setPassword] = useState(\"\")\n//   const [username, setUsername] = useState(\"\")\n//   const [confirmPassword, setConfirmPassword] = useState(\"\")\n//   const [showPassword, setShowPassword] = useState(false)\n//   const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n//   const [errors, setErrors] = useState<{\n//     email?: string\n//     password?: string\n//     username?: string\n//     confirmPassword?: string\n//   }>({})\n\n//   const validateLoginForm = () => {\n//     const newErrors: { email?: string; password?: string } = {}\n\n//     if (!email) {\n//       newErrors.email = \"Email is required\"\n//     } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n//       newErrors.email = \"Email is invalid\"\n//     }\n\n//     if (!password) {\n//       newErrors.password = \"Password is required\"\n//     } else if (password.length < 6) {\n//       newErrors.password = \"Password must be at least 6 characters\"\n//     }\n\n//     setErrors(newErrors)\n//     return Object.keys(newErrors).length === 0\n//   }\n\n//   const validateSignupForm = () => {\n//     const newErrors: {\n//       email?: string\n//       password?: string\n//       username?: string\n//       confirmPassword?: string\n//     } = {}\n\n//     if (!username) {\n//       newErrors.username = \"Username is required\"\n//     }\n\n//     if (!email) {\n//       newErrors.email = \"Email is required\"\n//     } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n//       newErrors.email = \"Email is invalid\"\n//     }\n\n//     if (!password) {\n//       newErrors.password = \"Password is required\"\n//     } else if (password.length < 6) {\n//       newErrors.password = \"Password must be at least 6 characters\"\n//     }\n\n//     if (!confirmPassword) {\n//       newErrors.confirmPassword = \"Please confirm your password\"\n//     } else if (confirmPassword !== password) {\n//       newErrors.confirmPassword = \"Passwords do not match\"\n//     }\n\n//     setErrors(newErrors)\n//     return Object.keys(newErrors).length === 0\n//   }\n\n//   const handleLoginSubmit = (e: React.FormEvent) => {\n//     e.preventDefault()\n\n//     if (validateLoginForm()) {\n//       // Here you would typically call your authentication API\n//       console.log(\"Login attempt with:\", { email, password })\n//       // For demo purposes, let's simulate a successful login\n//       alert(\"Login successful! (This is just a demo)\")\n//     }\n//   }\n\n//   const handleSignupSubmit = (e: React.FormEvent) => {\n//     e.preventDefault()\n\n//     if (validateSignupForm()) {\n//       // Here you would typically call your registration API\n//       console.log(\"Signup attempt with:\", { username, email, password })\n//       // For demo purposes, let's simulate a successful signup\n//       alert(\"Signup successful! (This is just a demo)\")\n//       // Optionally switch to login view after successful signup\n//       setIsLogin(true)\n//     }\n//   }\n\n//   const handleSocialAuth = (provider: string) => {\n//     // Here you would implement social login/signup logic\n//     console.log(`${isLogin ? \"Logging in\" : \"Signing up\"} with ${provider}`)\n//     alert(`${provider} ${isLogin ? \"login\" : \"signup\"} would be implemented here`)\n//   }\n\n//   const toggleAuthMode = () => {\n//     setIsLogin(!isLogin)\n//     setErrors({})\n//   }\n\n//   return (\n//     <div className=\"flex min-h-screen items-center justify-center bg-pink-50 p-4\">\n//       <div className=\"relative mx-auto flex w-full max-w-4xl overflow-hidden rounded-3xl bg-white shadow-xl\">\n//         <button className=\"absolute right-4 top-4 z-10 text-gray-500 hover:text-gray-700\">\n//           <svg\n//             xmlns=\"http://www.w3.org/2000/svg\"\n//             className=\"h-6 w-6\"\n//             fill=\"none\"\n//             viewBox=\"0 0 24 24\"\n//             stroke=\"currentColor\"\n//           >\n//             <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n//           </svg>\n//         </button>\n\n//         {/* Left side with illustration */}\n//         <div className=\"hidden w-1/2 bg-pink-100 lg:block\">\n//           <div className=\"relative h-full w-full p-6\">\n//             <div className=\"absolute left-6 top-6 font-bold text-pink-700\">Mofitask.</div>\n//             <div className=\"flex h-full items-center justify-center\">\n//               <Image\n//                 src=\"/placeholder.svg?height=400&width=400\"\n//                 alt=\"Authentication illustration\"\n//                 width={400}\n//                 height={400}\n//                 className=\"h-auto w-full max-w-md\"\n//                 priority\n//               />\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Right side with auth form */}\n//         <div className=\"w-full p-8 lg:w-1/2\">\n//           <div className=\"mx-auto max-w-md\">\n//             <h1 className=\"mb-8 text-3xl font-bold\">{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n\n//             {isLogin ? (\n//               // Login Form\n//               <form onSubmit={handleLoginSubmit}>\n//                 <div className=\"mb-6\">\n//                   <label htmlFor=\"email\" className=\"mb-2 block font-medium\">\n//                     Email\n//                   </label>\n//                   <div className=\"relative\">\n//                     <div className=\"pointer-events-none absolute inset-y-0 left-3 flex items-center\">\n//                       <Mail className=\"h-5 w-5 text-gray-400\" />\n//                     </div>\n//                     <input\n//                       id=\"email\"\n//                       type=\"email\"\n//                       value={email}\n//                       onChange={(e) => setEmail(e.target.value)}\n//                       className={`w-full rounded-md border ${\n//                         errors.email ? \"border-red-500\" : \"border-gray-300\"\n//                       } py-3 pl-10 pr-3 focus:border-pink-500 focus:outline-none focus:ring-1 focus:ring-pink-500`}\n//                       placeholder=\"daniel@fisher@gmail.com\"\n//                     />\n//                   </div>\n//                   {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\n//                 </div>\n\n//                 <div className=\"mb-6\">\n//                   <div className=\"mb-2 flex items-center justify-between\">\n//                     <label htmlFor=\"password\" className=\"block font-medium\">\n//                       Password\n//                     </label>\n//                   </div>\n//                   <div className=\"relative\">\n//                     <input\n//                       id=\"password\"\n//                       type={showPassword ? \"text\" : \"password\"}\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       className={`w-full rounded-md border ${\n//                         errors.password ? \"border-red-500\" : \"border-gray-300\"\n//                       } py-3 px-3 focus:border-pink-500 focus:outline-none focus:ring-1 focus:ring-pink-500`}\n//                       placeholder=\"••••••••\"\n//                     />\n//                     <button\n//                       type=\"button\"\n//                       className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-gray-400 hover:text-gray-600\"\n//                       onClick={() => setShowPassword(!showPassword)}\n//                     >\n//                       {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n//                     </button>\n//                   </div>\n//                   {errors.password && <p className=\"mt-1 text-sm text-red-500\">{errors.password}</p>}\n//                   <div className=\"mt-2 text-right\">\n//                     <Link href=\"/forgot-password\" className=\"text-sm font-medium text-amber-500 hover:text-amber-600\">\n//                       Forgot Password?\n//                     </Link>\n//                   </div>\n//                 </div>\n\n//                 <button\n//                   type=\"submit\"\n//                   className=\"w-full rounded-md bg-pink-500 py-3 font-medium text-white transition-colors hover:bg-pink-600 focus:outline-none focus:ring-2 focus:ring-pink-500 focus:ring-offset-2\"\n//                 >\n//                   Log In\n//                 </button>\n//               </form>\n//             ) : (\n//               // Sign Up Form\n//               <form onSubmit={handleSignupSubmit}>\n//                 <div className=\"mb-6\">\n//                   <label htmlFor=\"username\" className=\"mb-2 block font-medium\">\n//                     Username\n//                   </label>\n//                   <div className=\"relative\">\n//                     <div className=\"pointer-events-none absolute inset-y-0 left-3 flex items-center\">\n//                       <User className=\"h-5 w-5 text-gray-400\" />\n//                     </div>\n//                     <input\n//                       id=\"username\"\n//                       type=\"text\"\n//                       value={username}\n//                       onChange={(e) => setUsername(e.target.value)}\n//                       className={`w-full rounded-md border ${\n//                         errors.username ? \"border-red-500\" : \"border-gray-300\"\n//                       } py-3 pl-10 pr-3 focus:border-pink-500 focus:outline-none focus:ring-1 focus:ring-pink-500`}\n//                       placeholder=\"johndoe\"\n//                     />\n//                   </div>\n//                   {errors.username && <p className=\"mt-1 text-sm text-red-500\">{errors.username}</p>}\n//                 </div>\n\n//                 <div className=\"mb-6\">\n//                   <label htmlFor=\"signup-email\" className=\"mb-2 block font-medium\">\n//                     Email\n//                   </label>\n//                   <div className=\"relative\">\n//                     <div className=\"pointer-events-none absolute inset-y-0 left-3 flex items-center\">\n//                       <Mail className=\"h-5 w-5 text-gray-400\" />\n//                     </div>\n//                     <input\n//                       id=\"signup-email\"\n//                       type=\"email\"\n//                       value={email}\n//                       onChange={(e) => setEmail(e.target.value)}\n//                       className={`w-full rounded-md border ${\n//                         errors.email ? \"border-red-500\" : \"border-gray-300\"\n//                       } py-3 pl-10 pr-3 focus:border-pink-500 focus:outline-none focus:ring-1 focus:ring-pink-500`}\n//                       placeholder=\"john.doe@example.com\"\n//                     />\n//                   </div>\n//                   {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\n//                 </div>\n\n//                 <div className=\"mb-6\">\n//                   <label htmlFor=\"signup-password\" className=\"mb-2 block font-medium\">\n//                     Password\n//                   </label>\n//                   <div className=\"relative\">\n//                     <input\n//                       id=\"signup-password\"\n//                       type={showPassword ? \"text\" : \"password\"}\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       className={`w-full rounded-md border ${\n//                         errors.password ? \"border-red-500\" : \"border-gray-300\"\n//                       } py-3 px-3 focus:border-pink-500 focus:outline-none focus:ring-1 focus:ring-pink-500`}\n//                       placeholder=\"••••••••\"\n//                     />\n//                     <button\n//                       type=\"button\"\n//                       className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-gray-400 hover:text-gray-600\"\n//                       onClick={() => setShowPassword(!showPassword)}\n//                     >\n//                       {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n//                     </button>\n//                   </div>\n//                   {errors.password && <p className=\"mt-1 text-sm text-red-500\">{errors.password}</p>}\n//                 </div>\n\n//                 <div className=\"mb-6\">\n//                   <label htmlFor=\"confirm-password\" className=\"mb-2 block font-medium\">\n//                     Confirm Password\n//                   </label>\n//                   <div className=\"relative\">\n//                     <input\n//                       id=\"confirm-password\"\n//                       type={showConfirmPassword ? \"text\" : \"password\"}\n//                       value={confirmPassword}\n//                       onChange={(e) => setConfirmPassword(e.target.value)}\n//                       className={`w-full rounded-md border ${\n//                         errors.confirmPassword ? \"border-red-500\" : \"border-gray-300\"\n//                       } py-3 px-3 focus:border-pink-500 focus:outline-none focus:ring-1 focus:ring-pink-500`}\n//                       placeholder=\"••••••••\"\n//                     />\n//                     <button\n//                       type=\"button\"\n//                       className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-gray-400 hover:text-gray-600\"\n//                       onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n//                     >\n//                       {showConfirmPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n//                     </button>\n//                   </div>\n//                   {errors.confirmPassword && <p className=\"mt-1 text-sm text-red-500\">{errors.confirmPassword}</p>}\n//                 </div>\n\n//                 <button\n//                   type=\"submit\"\n//                   className=\"w-full rounded-md bg-pink-500 py-3 font-medium text-white transition-colors hover:bg-pink-600 focus:outline-none focus:ring-2 focus:ring-pink-500 focus:ring-offset-2\"\n//                 >\n//                   Sign Up\n//                 </button>\n//               </form>\n//             )}\n\n//             <div className=\"my-6 flex items-center\">\n//               <div className=\"flex-grow border-t border-gray-300\"></div>\n//               <span className=\"mx-4 text-sm text-gray-500\">Or Continue With</span>\n//               <div className=\"flex-grow border-t border-gray-300\"></div>\n//             </div>\n\n//             <div className=\"flex justify-center space-x-4\">\n//               <button\n//                 onClick={() => handleSocialAuth(\"Google\")}\n//                 className=\"flex h-12 w-12 items-center justify-center rounded-full border border-gray-300 transition-colors hover:bg-gray-50\"\n//               >\n//                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n//                   <path\n//                     fill=\"#EA4335\"\n//                     d=\"M5.266 9.765A7.077 7.077 0 0 1 12 4.909c1.69 0 3.218.6 4.418 1.582L19.91 3C17.782 1.145 15.055 0 12 0 7.27 0 3.198 2.698 1.24 6.65l4.026 3.115Z\"\n//                   />\n//                   <path\n//                     fill=\"#34A853\"\n//                     d=\"M16.04 18.013c-1.09.703-2.474 1.078-4.04 1.078a7.077 7.077 0 0 1-6.723-4.823l-4.04 3.067A11.965 11.965 0 0 0 12 24c2.933 0 5.735-1.043 7.834-3l-3.793-2.987Z\"\n//                   />\n//                   <path\n//                     fill=\"#4A90E2\"\n//                     d=\"M19.834 21c2.195-2.048 3.62-5.096 3.62-9 0-.71-.109-1.473-.272-2.182H12v4.637h6.436c-.317 1.559-1.17 2.766-2.395 3.558L19.834 21Z\"\n//                   />\n//                   <path\n//                     fill=\"#FBBC05\"\n//                     d=\"M5.277 14.268A7.12 7.12 0 0 1 4.909 12c0-.782.125-1.533.357-2.235L1.24 6.65A11.934 11.934 0 0 0 0 12c0 1.92.445 3.73 1.237 5.335l4.04-3.067Z\"\n//                   />\n//                 </svg>\n//               </button>\n//               <button\n//                 onClick={() => handleSocialAuth(\"Facebook\")}\n//                 className=\"flex h-12 w-12 items-center justify-center rounded-full border border-gray-300 transition-colors hover:bg-gray-50\"\n//               >\n//                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n//                   <path\n//                     fill=\"#1877F2\"\n//                     d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"\n//                   />\n//                 </svg>\n//               </button>\n//               <button\n//                 onClick={() => handleSocialAuth(\"Apple\")}\n//                 className=\"flex h-12 w-12 items-center justify-center rounded-full border border-gray-300 transition-colors hover:bg-gray-50\"\n//               >\n//                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n//                   <path d=\"M14.94 5.19A4.38 4.38 0 0 0 16 2a4.44 4.44 0 0 0-3 1.52 4.17 4.17 0 0 0-1 3.09 3.69 3.69 0 0 0 2.94-1.42zm2.52 7.44a4.51 4.51 0 0 1 2.16-3.81 4.66 4.66 0 0 0-3.66-2c-1.56-.16-3 .91-3.83.91s-2-.89-3.3-.87a4.92 4.92 0 0 0-4.14 2.53C2.93 12.45 4.24 17 6 19.47c.8 1.21 1.8 2.58 3.12 2.53s1.75-.82 3.28-.82 2 .82 3.3.79 2.22-1.24 3.06-2.45a11 11 0 0 0 1.38-2.85 4.41 4.41 0 0 1-2.68-4.04z\" />\n//                 </svg>\n//               </button>\n//             </div>\n\n//             <div className=\"mt-8 text-center\">\n//               <p className=\"text-sm text-gray-600\">\n//                 {isLogin ? \"Don't have an account?\" : \"Already have an account?\"}{\" \"}\n//                 <button\n//                   type=\"button\"\n//                   onClick={toggleAuthMode}\n//                   className=\"font-medium text-pink-600 hover:text-pink-700\"\n//                 >\n//                   {isLogin ? \"Sign up here\" : \"Login here\"}\n//                 </button>\n//               </p>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n\n\"use client\"\n\nimport type React from \"react\"\nimport { FormEvent, useState } from \"react\"\nimport { Eye, EyeOff, Mail, User } from \"lucide-react\"\nimport Image from \"next/image\"\nimport Link from \"next/link\"\n\nexport default function AuthPage({ mode }: { mode: 'login' | 'signup' }) {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [username, setUsername] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n  const [errors, setErrors] = useState<{\n    email?: string\n    password?: string\n    username?: string\n    confirmPassword?: string\n  }>({})\n\n  function handleLoginSubmit(event: FormEvent<HTMLFormElement>): void {\n    throw new Error(\"Function not implemented.\")\n  }\n\n  function handleSignupSubmit(event: FormEvent<HTMLFormElement>): void {\n    throw new Error(\"Function not implemented.\")\n  }\n\n  // Validation and submit handlers remain the same as original\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center bg-[#F4F4F4] p-4\">\n      <div className=\"relative mx-auto flex w-full max-w-4xl overflow-hidden rounded-3xl bg-white shadow-xl\">\n        <button className=\"absolute right-4 top-4 z-10 text-[#333333] hover:text-[#0077B6]\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n\n        {/* Left side with illustration */}\n        <div className=\"hidden w-1/2 bg-[#0077B6] lg:block\">\n          <div className=\"relative h-full w-full p-6\">\n            <div className=\"absolute left-6 top-6 font-bold text-white\">Mofitask.</div>\n            <div className=\"flex h-full items-center justify-center\">\n              <Image\n                src=\"/placeholder.svg?height=400&width=400\"\n                alt=\"Authentication illustration\"\n                width={400}\n                height={400}\n                className=\"h-auto w-full max-w-md\"\n                priority\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Right side with auth form */}\n        <div className=\"w-full p-8 lg:w-1/2\">\n          <div className=\"mx-auto max-w-md\">\n            <h1 className=\"mb-8 text-3xl font-bold text-[#333333]\">\n              {mode === 'login' ? \"Login\" : \"Sign Up\"}\n            </h1>\n\n            {mode === 'login' ? (\n              // Login Form\n              <form onSubmit={handleLoginSubmit}>\n                {/* Email Input */}\n                <div className=\"mb-6\">\n                  <label htmlFor=\"email\" className=\"mb-2 block font-medium text-[#333333]\">\n                    Email\n                  </label>\n                  <div className=\"relative\">\n                    <div className=\"pointer-events-none absolute inset-y-0 left-3 flex items-center\">\n                      <Mail className=\"h-5 w-5 text-[#333333]\" />\n                    </div>\n                    <input\n                      id=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      className={`w-full rounded-md border ${\n                        errors.email ? \"border-red-500\" : \"border-gray-300\"\n                      } py-3 pl-10 pr-3 text-[#333333] focus:border-[#0077B6] focus:outline-none focus:ring-1 focus:ring-[#0077B6]`}\n                      placeholder=\"daniel@fisher@gmail.com\"\n                    />\n                  </div>\n                  {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\n                </div>\n\n                {/* Password Input */}\n                <div className=\"mb-6\">\n                  <div className=\"mb-2 flex items-center justify-between\">\n                    <label htmlFor=\"password\" className=\"block font-medium text-[#333333]\">\n                      Password\n                    </label>\n                  </div>\n                  <div className=\"relative\">\n                    <input\n                      id=\"password\"\n                      type={showPassword ? \"text\" : \"password\"}\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      className={`w-full rounded-md border ${\n                        errors.password ? \"border-red-500\" : \"border-gray-300\"\n                      } py-3 px-3 text-[#333333] focus:border-[#0077B6] focus:outline-none focus:ring-1 focus:ring-[#0077B6]`}\n                      placeholder=\"••••••••\"\n                    />\n                    <button\n                      type=\"button\"\n                      className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-[#333333] hover:text-[#0077B6]\"\n                      onClick={() => setShowPassword(!showPassword)}\n                    >\n                      {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                    </button>\n                  </div>\n                  {errors.password && <p className=\"mt-1 text-sm text-red-500\">{errors.password}</p>}\n                  <div className=\"mt-2 text-right\">\n                    <Link\n                      href=\"/forgot-password\"\n                      className=\"text-sm font-medium text-[#FF6F61] hover:text-[#FF5349]\"\n                    >\n                      Forgot Password?\n                    </Link>\n                  </div>\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"w-full rounded-md bg-[#0077B6] py-3 font-medium text-white transition-colors hover:bg-[#006699] focus:outline-none focus:ring-2 focus:ring-[#0077B6] focus:ring-offset-2\"\n                >\n                  Log In\n                </button>\n              </form>\n            ) : (\n              // Sign Up Form\n              <form onSubmit={handleSignupSubmit}>\n                {/* Username Input */}\n                <div className=\"mb-6\">\n                  <label htmlFor=\"username\" className=\"mb-2 block font-medium text-[#333333]\">\n                    Username\n                  </label>\n                  <div className=\"relative\">\n                    <div className=\"pointer-events-none absolute inset-y-0 left-3 flex items-center\">\n                      <User className=\"h-5 w-5 text-[#333333]\" />\n                    </div>\n                    <input\n                      id=\"username\"\n                      type=\"text\"\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                      className={`w-full rounded-md border ${\n                        errors.username ? \"border-red-500\" : \"border-gray-300\"\n                      } py-3 pl-10 pr-3 text-[#333333] focus:border-[#0077B6] focus:outline-none focus:ring-1 focus:ring-[#0077B6]`}\n                      placeholder=\"johndoe\"\n                    />\n                  </div>\n                  {errors.username && <p className=\"mt-1 text-sm text-red-500\">{errors.username}</p>}\n                </div>\n\n                {/* Email Input */}\n                <div className=\"mb-6\">\n                  <label htmlFor=\"signup-email\" className=\"mb-2 block font-medium text-[#333333]\">\n                    Email\n                  </label>\n                  <div className=\"relative\">\n                    <div className=\"pointer-events-none absolute inset-y-0 left-3 flex items-center\">\n                      <Mail className=\"h-5 w-5 text-[#333333]\" />\n                    </div>\n                    <input\n                      id=\"signup-email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      className={`w-full rounded-md border ${\n                        errors.email ? \"border-red-500\" : \"border-gray-300\"\n                      } py-3 pl-10 pr-3 text-[#333333] focus:border-[#0077B6] focus:outline-none focus:ring-1 focus:ring-[#0077B6]`}\n                      placeholder=\"john.doe@example.com\"\n                    />\n                  </div>\n                  {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\n                </div>\n\n                {/* Password Input */}\n                <div className=\"mb-6\">\n                  <label htmlFor=\"signup-password\" className=\"mb-2 block font-medium text-[#333333]\">\n                    Password\n                  </label>\n                  <div className=\"relative\">\n                    <input\n                      id=\"signup-password\"\n                      type={showPassword ? \"text\" : \"password\"}\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      className={`w-full rounded-md border ${\n                        errors.password ? \"border-red-500\" : \"border-gray-300\"\n                      } py-3 px-3 text-[#333333] focus:border-[#0077B6] focus:outline-none focus:ring-1 focus:ring-[#0077B6]`}\n                      placeholder=\"••••••••\"\n                    />\n                    <button\n                      type=\"button\"\n                      className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-[#333333] hover:text-[#0077B6]\"\n                      onClick={() => setShowPassword(!showPassword)}\n                    >\n                      {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                    </button>\n                  </div>\n                  {errors.password && <p className=\"mt-1 text-sm text-red-500\">{errors.password}</p>}\n                </div>\n\n                {/* Confirm Password Input */}\n                <div className=\"mb-6\">\n                  <label htmlFor=\"confirm-password\" className=\"mb-2 block font-medium text-[#333333]\">\n                    Confirm Password\n                  </label>\n                  <div className=\"relative\">\n                    <input\n                      id=\"confirm-password\"\n                      type={showConfirmPassword ? \"text\" : \"password\"}\n                      value={confirmPassword}\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      className={`w-full rounded-md border ${\n                        errors.confirmPassword ? \"border-red-500\" : \"border-gray-300\"\n                      } py-3 px-3 text-[#333333] focus:border-[#0077B6] focus:outline-none focus:ring-1 focus:ring-[#0077B6]`}\n                      placeholder=\"••••••••\"\n                    />\n                    <button\n                      type=\"button\"\n                      className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-[#333333] hover:text-[#0077B6]\"\n                      onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                    >\n                      {showConfirmPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                    </button>\n                  </div>\n                  {errors.confirmPassword && <p className=\"mt-1 text-sm text-red-500\">{errors.confirmPassword}</p>}\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"w-full rounded-md bg-[#0077B6] py-3 font-medium text-white transition-colors hover:bg-[#006699] focus:outline-none focus:ring-2 focus:ring-[#0077B6] focus:ring-offset-2\"\n                >\n                  Sign Up\n                </button>\n              </form>\n            )}\n\n            <div className=\"my-6 flex items-center\">\n              <div className=\"flex-grow border-t border-gray-300\"></div>\n              <span className=\"mx-4 text-sm text-[#333333]\">Or Continue With</span>\n              <div className=\"flex-grow border-t border-gray-300\"></div>\n            </div>\n\n            <div className=\"flex justify-center space-x-4\">\n              {/* Social buttons remain the same */}\n            </div>\n\n            <div className=\"mt-8 text-center\">\n              <p className=\"text-sm text-[#333333]\">\n                {mode === 'login' ? \"Don't have an account?\" : \"Already have an account?\"}{\" \"}\n                <Link\n                  href={mode === 'login' ? \"/signup\" : \"/signin\"}\n                  className=\"font-medium text-[#0077B6] hover:text-[#006699]\"\n                >\n                  {mode === 'login' ? \"Sign up here\" : \"Login here\"}\n                </Link>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}