{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nitishkumar/Desktop/project/app/settings/page.tsx"],"sourcesContent":["\"use client\"\n// pages/settings.tsx\nimport { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/navigation';\n\nimport Image from 'next/image';\n\n// Define types for our settings\ninterface UserSettings {\n  displayName: string;\n  email: string;\n  bio: string;\n  profilePicture: string;\n  notificationPreferences: {\n    emailNotifications: boolean;\n    pushNotifications: boolean;\n    newsletterSubscription: boolean;\n    commentReplies: boolean;\n    newFollowers: boolean;\n  };\n  privacySettings: {\n    profileVisibility: 'public' | 'private' | 'followers';\n    showEmail: boolean;\n    allowComments: boolean;\n    allowSharing: boolean;\n  };\n  appearanceSettings: {\n    theme: 'light' | 'dark' | 'system';\n    fontSize: 'small' | 'medium' | 'large';\n    compactView: boolean;\n  };\n  contentPreferences: {\n    categories: string[];\n    language: string;\n  };\n}\n\n// Mock data for available categories and languages\nconst availableCategories = [\n  'Technology', 'Travel', 'Food', 'Fashion', 'Health', \n  'Fitness', 'Business', 'Finance', 'Art', 'Science'\n];\n\nconst availableLanguages = [\n  { code: 'en', name: 'English' },\n  { code: 'es', name: 'Spanish' },\n  { code: 'fr', name: 'French' },\n  { code: 'de', name: 'German' },\n  { code: 'ja', name: 'Japanese' },\n  { code: 'zh', name: 'Chinese' },\n];\n\nexport default function Settings() {\n  const router = useRouter();\n  const [activeTab, setActiveTab] = useState('profile');\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveMessage, setSaveMessage] = useState('');\n  const [imagePreview, setImagePreview] = useState<string | null>(null);\n  \n  // Initialize with default settings\n  const [settings, setSettings] = useState<UserSettings>({\n    displayName: 'John Doe',\n    email: 'johndoe@example.com',\n    bio: 'I love writing about technology and travel.',\n    profilePicture: '/default-avatar.png',\n    notificationPreferences: {\n      emailNotifications: true,\n      pushNotifications: true,\n      newsletterSubscription: true,\n      commentReplies: true,\n      newFollowers: true\n    },\n    privacySettings: {\n      profileVisibility: 'public',\n      showEmail: false,\n      allowComments: true,\n      allowSharing: true\n    },\n    appearanceSettings: {\n      theme: 'system',\n      fontSize: 'medium',\n      compactView: false\n    },\n    contentPreferences: {\n      categories: ['Technology', 'Travel'],\n      language: 'en'\n    }\n  });\n\n  // Handle input changes\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setSettings({\n      ...settings,\n      [name]: value\n    });\n  };\n\n  // Handle checkbox changes\n  const handleCheckboxChange = (section: string, setting: string) => {\n    setSettings({\n      ...settings,\n      [section]: {\n        ...settings[section as keyof UserSettings],\n        [setting]: !(settings[section as keyof UserSettings] as any)[setting]\n      }\n    });\n  };\n\n  // Handle nested select changes\n  const handleSelectChange = (section: string, setting: string, value: any) => {\n    setSettings({\n      ...settings,\n      [section]: {\n        ...settings[section as keyof UserSettings],\n        [setting]: value\n      }\n    });\n  };\n\n  // Handle category selection\n  const handleCategoryToggle = (category: string) => {\n    const currentCategories = settings.contentPreferences.categories;\n    let newCategories;\n    \n    if (currentCategories.includes(category)) {\n      newCategories = currentCategories.filter(c => c !== category);\n    } else {\n      newCategories = [...currentCategories, category];\n    }\n    \n    setSettings({\n      ...settings,\n      contentPreferences: {\n        ...settings.contentPreferences,\n        categories: newCategories\n      }\n    });\n  };\n\n  // Handle file upload for profile picture\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Save settings\n  const saveSettings = async () => {\n    setIsSaving(true);\n    // Simulate API call\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      if (imagePreview) {\n        setSettings({\n          ...settings,\n          profilePicture: imagePreview\n        });\n      }\n      setSaveMessage('Settings saved successfully!');\n      setTimeout(() => setSaveMessage(''), 3000);\n    } catch (error) {\n      setSaveMessage('Error saving settings. Please try again.');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Settings content */}\n      <div className=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8\">\n        <div className=\"md:grid md:grid-cols-3 md:gap-6\">\n          <div className=\"md:col-span-1\">\n            <div className=\"px-4 sm:px-0\">\n              <h2 className=\"text-lg font-medium leading-6 text-gray-900\">Settings</h2>\n              <p className=\"mt-1 text-sm text-gray-600\">\n                Manage your account settings and preferences.\n              </p>\n              \n              {/* Settings navigation */}\n              <nav className=\"mt-5 space-y-1\" aria-label=\"Settings\">\n                <button\n                  onClick={() => setActiveTab('profile')}\n                  className={`${\n                    activeTab === 'profile'\n                      ? 'bg-indigo-50 border-indigo-500 text-indigo-700'\n                      : 'border-transparent text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                  } flex items-center px-3 py-2 text-sm font-medium border-l-4 w-full text-left`}\n                >\n                  <svg className=\"mr-3 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                  </svg>\n                  Profile\n                </button>\n\n                <button\n                  onClick={() => setActiveTab('notifications')}\n                  className={`${\n                    activeTab === 'notifications'\n                      ? 'bg-indigo-50 border-indigo-500 text-indigo-700'\n                      : 'border-transparent text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                  } flex items-center px-3 py-2 text-sm font-medium border-l-4 w-full text-left`}\n                >\n                  <svg className=\"mr-3 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\n                  </svg>\n                  Notifications\n                </button>\n\n                <button\n                  onClick={() => setActiveTab('privacy')}\n                  className={`${\n                    activeTab === 'privacy'\n                      ? 'bg-indigo-50 border-indigo-500 text-indigo-700'\n                      : 'border-transparent text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                  } flex items-center px-3 py-2 text-sm font-medium border-l-4 w-full text-left`}\n                >\n                  <svg className=\"mr-3 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                  </svg>\n                  Privacy & Security\n                </button>\n\n                <button\n                  onClick={() => setActiveTab('appearance')}\n                  className={`${\n                    activeTab === 'appearance'\n                      ? 'bg-indigo-50 border-indigo-500 text-indigo-700'\n                      : 'border-transparent text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                  } flex items-center px-3 py-2 text-sm font-medium border-l-4 w-full text-left`}\n                >\n                  <svg className=\"mr-3 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01\" />\n                  </svg>\n                  Appearance\n                </button>\n\n                <button\n                  onClick={() => setActiveTab('content')}\n                  className={`${\n                    activeTab === 'content'\n                      ? 'bg-indigo-50 border-indigo-500 text-indigo-700'\n                      : 'border-transparent text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                  } flex items-center px-3 py-2 text-sm font-medium border-l-4 w-full text-left`}\n                >\n                  <svg className=\"mr-3 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n                  </svg>\n                  Content Preferences\n                </button>\n              </nav>\n            </div>\n          </div>\n\n          <div className=\"mt-5 md:mt-0 md:col-span-2\">\n            <div className=\"shadow sm:rounded-md\">\n              <div className=\"px-4 py-5 bg-white sm:p-6\">\n                {/* Profile Settings */}\n                {activeTab === 'profile' && (\n                  <div className=\"space-y-6\">\n                    <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Profile Information</h3>\n                    <div className=\"grid grid-cols-6 gap-6\">\n                      <div className=\"col-span-6 sm:col-span-4\">\n                        <label htmlFor=\"displayName\" className=\"block text-sm font-medium text-gray-700\">\n                          Display Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"displayName\"\n                          id=\"displayName\"\n                          value={settings.displayName}\n                          onChange={handleInputChange}\n                          className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                        />\n                      </div>\n\n                      <div className=\"col-span-6 sm:col-span-4\">\n                        <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                          Email Address\n                        </label>\n                        <input\n                          type=\"email\"\n                          name=\"email\"\n                          id=\"email\"\n                          value={settings.email}\n                          onChange={handleInputChange}\n                          className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                        />\n                      </div>\n\n                      <div className=\"col-span-6\">\n                        <label htmlFor=\"bio\" className=\"block text-sm font-medium text-gray-700\">\n                          Bio\n                        </label>\n                        <textarea\n                          id=\"bio\"\n                          name=\"bio\"\n                          rows={3}\n                          value={settings.bio}\n                          onChange={handleInputChange}\n                          className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                        />\n                        <p className=\"mt-2 text-sm text-gray-500\">\n                          Brief description for your profile. URLs are hyperlinked.\n                        </p>\n                      </div>\n\n                      <div className=\"col-span-6\">\n                        <label className=\"block text-sm font-medium text-gray-700\">\n                          Profile Picture\n                        </label>\n                        <div className=\"mt-2 flex items-center space-x-5\">\n                          <div className=\"flex-shrink-0\">\n                            <div className=\"relative h-16 w-16 rounded-full overflow-hidden bg-gray-100\">\n                              {imagePreview ? (\n                                // eslint-disable-next-line @next/next/no-img-element\n                                <img src={imagePreview} alt=\"Profile preview\" className=\"h-full w-full object-cover\" />\n                              ) : (\n                                <div className=\"h-full w-full flex items-center justify-center text-indigo-600 text-xl font-bold\">\n                                  {settings.displayName.charAt(0)}\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"flex text-sm text-gray-600\">\n                            <label\n                              htmlFor=\"profile-photo\"\n                              className=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none\"\n                            >\n                              <span>Change</span>\n                              <input\n                                id=\"profile-photo\"\n                                name=\"profile-photo\"\n                                type=\"file\"\n                                className=\"sr-only\"\n                                accept=\"image/*\"\n                                onChange={handleFileChange}\n                              />\n                            </label>\n                            <p className=\"pl-1\">or drag and drop</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Notification Settings */}\n                {activeTab === 'notifications' && (\n                  <div className=\"space-y-6\">\n                    <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Notification Preferences</h3>\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"emailNotifications\"\n                            name=\"emailNotifications\"\n                            type=\"checkbox\"\n                            checked={settings.notificationPreferences.emailNotifications}\n                            onChange={() => handleCheckboxChange('notificationPreferences', 'emailNotifications')}\n                            className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"emailNotifications\" className=\"font-medium text-gray-700\">\n                            Email Notifications\n                          </label>\n                          <p className=\"text-gray-500\">Receive email notifications for important updates.</p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"pushNotifications\"\n                            name=\"pushNotifications\"\n                            type=\"checkbox\"\n                            checked={settings.notificationPreferences.pushNotifications}\n                            onChange={() => handleCheckboxChange('notificationPreferences', 'pushNotifications')}\n                            className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"pushNotifications\" className=\"font-medium text-gray-700\">\n                            Push Notifications\n                          </label>\n                          <p className=\"text-gray-500\">Allow browser push notifications.</p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"newsletterSubscription\"\n                            name=\"newsletterSubscription\"\n                            type=\"checkbox\"\n                            checked={settings.notificationPreferences.newsletterSubscription}\n                            onChange={() => handleCheckboxChange('notificationPreferences', 'newsletterSubscription')}\n                            className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"newsletterSubscription\" className=\"font-medium text-gray-700\">\n                            Newsletter Subscription\n                          </label>\n                          <p className=\"text-gray-500\">Receive our weekly newsletter with the best content.</p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"commentReplies\"\n                            name=\"commentReplies\"\n                            type=\"checkbox\"\n                            checked={settings.notificationPreferences.commentReplies}\n                            onChange={() => handleCheckboxChange('notificationPreferences', 'commentReplies')}\n                            className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"commentReplies\" className=\"font-medium text-gray-700\">\n                            Comment Replies\n                          </label>\n                          <p className=\"text-gray-500\">Get notified when someone replies to your comments.</p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"newFollowers\"\n                            name=\"newFollowers\"\n                            type=\"checkbox\"\n                            checked={settings.notificationPreferences.newFollowers}\n                            onChange={() => handleCheckboxChange('notificationPreferences', 'newFollowers')}\n                            className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"newFollowers\" className=\"font-medium text-gray-700\">\n                            New Followers\n                          </label>\n                          <p className=\"text-gray-500\">Get notified when someone follows you.</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Privacy Settings */}\n                {activeTab === 'privacy' && (\n                  <div className=\"space-y-6\">\n                    <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Privacy Settings</h3>\n                    <div className=\"space-y-4\">\n                      <div>\n                        <label htmlFor=\"profileVisibility\" className=\"block text-sm font-medium text-gray-700\">\n                          Profile Visibility\n                        </label>\n                        <select\n                          id=\"profileVisibility\"\n                          name=\"profileVisibility\"\n                          value={settings.privacySettings.profileVisibility}\n                          onChange={(e) => handleSelectChange('privacySettings', 'profileVisibility', e.target.value)}\n                          className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                        >\n                          <option value=\"public\">Public - Anyone can view your profile</option>\n                          <option value=\"private\">Private - Only you can view your profile</option>\n                          <option value=\"followers\">Followers Only - Only followers can view your profile</option>\n                        </select>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"showEmail\"\n                            name=\"showEmail\"\n                            type=\"checkbox\"\n                            checked={settings.privacySettings.showEmail}\n                            onChange={() => handleCheckboxChange('privacySettings', 'showEmail')}\n                            className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"showEmail\" className=\"font-medium text-gray-700\">\n                            Show Email\n                          </label>\n                          <p className=\"text-gray-500\">Display your email address on your public profile.</p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"allowComments\"\n                            name=\"allowComments\"\n                            type=\"checkbox\"\n                            checked={settings.privacySettings.allowComments}\n                            onChange={() => handleCheckboxChange('privacySettings', 'allowComments')}\n                            className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"allowComments\" className=\"font-medium text-gray-700\">\n                            Allow Comments\n                          </label>\n                          <p className=\"text-gray-500\">Allow others to comment on your posts.</p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"allowSharing\"\n                            name=\"allowSharing\"\n                            type=\"checkbox\"\n                            checked={settings.privacySettings.allowSharing}\n                            onChange={() => handleCheckboxChange('privacySettings', 'allowSharing')}\n                            className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"allowSharing\" className=\"font-medium text-gray-700\">\n                            Allow Sharing\n                          </label>\n                          <p className=\"text-gray-500\">Allow others to share your posts on social media.</p>\n                        </div>\n                      </div>\n\n                      <div className=\"pt-4\">\n                        <h4 className=\"text-md font-medium text-gray-900\">Security Options</h4>\n                        <div className=\"mt-4\">\n                          <button\n                            type=\"button\"\n                            className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                          >\n                            Change Password\n                          </button>\n                        </div>\n                        <div className=\"mt-4\">\n                          <button\n                            type=\"button\"\n                            className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                          >\n                            Enable Two-Factor Authentication\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n      {/* Appearance Settings */}\n      {activeTab === 'appearance' && (\n        <div className=\"space-y-6\">\n          <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Appearance Settings</h3>\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"theme\" className=\"block text-sm font-medium text-gray-700\">\n                Theme\n              </label>\n              <select\n                id=\"theme\"\n                name=\"theme\"\n                value={settings.appearanceSettings.theme}\n                onChange={(e) => handleSelectChange('appearanceSettings', 'theme', e.target.value)}\n                className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n              >\n                <option value=\"system\">System Preference</option>\n                <option value=\"light\">Light Mode</option>\n                <option value=\"dark\">Dark Mode</option>\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"fontSize\" className=\"block text-sm font-medium text-gray-700\">\n                Font Size\n              </label>\n              <select\n                id=\"fontSize\"\n                name=\"fontSize\"\n                value={settings.appearanceSettings.fontSize}\n                onChange={(e) => handleSelectChange('appearanceSettings', 'fontSize', e.target.value)}\n                className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n              >\n                <option value=\"small\">Small</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"large\">Large</option>\n              </select>\n            </div>\n\n            <div className=\"flex items-start\">\n              <div className=\"flex items-center h-5\">\n                <input\n                  id=\"compactView\"\n                  name=\"compactView\"\n                  type=\"checkbox\"\n                  checked={settings.appearanceSettings.compactView}\n                  onChange={() => handleCheckboxChange('appearanceSettings', 'compactView')}\n                  className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                />\n              </div>\n              <div className=\"ml-3 text-sm\">\n                <label htmlFor=\"compactView\" className=\"font-medium text-gray-700\">\n                  Compact View\n                </label>\n                <p className=\"text-gray-500\">Enable more compact layout for content lists</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Content Preferences */}\n      {activeTab === 'content' && (\n        <div className=\"space-y-6\">\n          <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Content Preferences</h3>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Preferred Categories\n              </label>\n              <div className=\"grid grid-cols-2 gap-2\">\n                {availableCategories.map((category) => (\n                  <button\n                    key={category}\n                    type=\"button\"\n                    onClick={() => handleCategoryToggle(category)}\n                    className={`${\n                      settings.contentPreferences.categories.includes(category)\n                        ? 'bg-indigo-600 text-white hover:bg-indigo-700'\n                        : 'bg-gray-50 text-gray-700 hover:bg-gray-100'\n                    } rounded-md px-3 py-2 text-sm font-medium transition-colors`}\n                  >\n                    {category}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"language\" className=\"block text-sm font-medium text-gray-700\">\n                Preferred Language\n              </label>\n              <select\n                id=\"language\"\n                name=\"language\"\n                value={settings.contentPreferences.language}\n                onChange={(e) => handleSelectChange('contentPreferences', 'language', e.target.value)}\n                className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n              >\n                {availableLanguages.map((lang) => (\n                  <option key={lang.code} value={lang.code}>\n                    {lang.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Save button and footer */}\n      <div className=\"px-4 py-3 bg-gray-50 sm:px-6 flex justify-between\">\n        <div>\n          {saveMessage && (\n            <p className={`text-sm ${saveMessage.includes('success') ? 'text-green-600' : 'text-red-600'}`}>\n              {saveMessage}\n            </p>\n          )}\n        </div>\n        <button\n          type=\"button\"\n          onClick={saveSettings}\n          disabled={isSaving}\n          className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n        >\n          {isSaving ? 'Saving...' : 'Save Changes'}\n        </button>\n      </div>\n    </div>\n  );\n  </div>\n  </div>\n  </div>\n  </div>\n  </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}